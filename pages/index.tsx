import { Post, PostService } from "cms-alganews-sdk";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React from "react";
import { FeaturedPost } from "../components/FeaturedPost";
import { ServerResponse } from "http";
import { PostCard } from "../components/PostCard";
import { PostsGrid } from "../components/PostsGrid";
import { PageGrid } from "../components/PageGrid";
import ReactPaginate from "react-paginate";
import Router from "next/router";

interface HomeProps {
  posts?: Post.Paginated;
}

const Home = ({ posts }: HomeProps) => {
  return (
    <PageGrid>
      <Head>
        <title>Alganews</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {posts?.content && <FeaturedPost postSummary={posts.content[0]} />}

      <PostsGrid>
        {posts?.content?.slice(1).map((post) => (
          <PostCard key={post.id} post={post} />
        ))}
      </PostsGrid>

      <ReactPaginate
        containerClassName='Pagination'
        pageCount={posts?.totalPages || 0}
        marginPagesDisplayed={0}
        pageRangeDisplayed={3}
        previousLabel={"<"}
        nextLabel={">"}
        hrefBuilder={(page) => `/?page=${page}`}
        onPageChange={(page) => {
          Router.push(`/?page=${page.selected + 1}`);
        }}
      />
    </PageGrid>
  );
};

export default Home;

const sendToHome = (res: ServerResponse) => {
  res.statusCode = 302;
  res.setHeader("Location", "/?page=1");

  return {
    props: {},
  };
};

export const getServerSideProps: GetServerSideProps<HomeProps> = async (
  context
) => {
  const { page: _page } = context.query;

  const page = Number(_page);

  if (isNaN(page) || page < 1) {
    return sendToHome(context.res);
  }

  const posts = await PostService.getAllPosts({ page: page - 1 });

  if (!posts.content?.length) {
    return sendToHome(context.res);
  }
  return {
    props: { posts },
  };
};
